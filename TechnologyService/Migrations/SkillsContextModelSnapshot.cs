// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnologyService.Context;

namespace TechnologyService.Migrations
{
    [DbContext(typeof(SkillsContext))]
    partial class SkillsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TechnologyService.Models.Mentor", b =>
                {
                    b.Property<long>("Mentor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Mentor_Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Mentor_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_Exp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_From_TimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mentor_Mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("Mentor_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_PrimarySkill")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mentor_To_TimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Mentor_active")
                        .HasColumnType("bit");

                    b.HasKey("Mentor_Id");

                    b.ToTable("Mentor");
                });

            modelBuilder.Entity("TechnologyService.Models.Payment", b =>
                {
                    b.Property<long>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Mentor_Amount")
                        .HasColumnType("float");

                    b.Property<long>("Mentor_Id")
                        .HasColumnType("bigint");

                    b.Property<double>("Payment_Amount")
                        .HasColumnType("float");

                    b.Property<string>("Skill_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Training_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("User_Id")
                        .HasColumnType("bigint");

                    b.HasKey("Payment_Id");

                    b.HasIndex("Mentor_Id");

                    b.HasIndex("Training_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("TechnologyService.Models.Skills", b =>
                {
                    b.Property<long>("Skill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Skill_Duration")
                        .HasColumnType("int");

                    b.Property<double>("Skill_Fee")
                        .HasColumnType("float");

                    b.Property<string>("Skill_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill_Toc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Skill_Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("TechnologyService.Models.Training", b =>
                {
                    b.Property<long>("Training_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("Date");

                    b.Property<string>("Mentor_From_TimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mentor_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Mentor_To_TimeSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Skill_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("Date");

                    b.Property<long>("Training_Progress")
                        .HasColumnType("bigint");

                    b.Property<string>("Training_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("User_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("rating")
                        .HasColumnType("bigint");

                    b.HasKey("Training_Id");

                    b.HasIndex("Mentor_Id");

                    b.HasIndex("Skill_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("TechnologyService.Models.User", b =>
                {
                    b.Property<long>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("User_Mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("User_active")
                        .HasColumnType("bit");

                    b.HasKey("User_Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TechnologyService.Models.Payment", b =>
                {
                    b.HasOne("TechnologyService.Models.Mentor", "Mentor")
                        .WithMany("Payment")
                        .HasForeignKey("Mentor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyService.Models.Training", "Training")
                        .WithMany("Payment")
                        .HasForeignKey("Training_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyService.Models.User", "User")
                        .WithMany("Payment")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechnologyService.Models.Training", b =>
                {
                    b.HasOne("TechnologyService.Models.Mentor", "Mentor")
                        .WithMany("Training")
                        .HasForeignKey("Mentor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyService.Models.Skills", "Skills")
                        .WithMany("Trainings")
                        .HasForeignKey("Skill_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyService.Models.User", "User")
                        .WithMany("Training")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
